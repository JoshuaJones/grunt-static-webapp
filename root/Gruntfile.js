/*
 * PROJECT: {%= name %} - v{%= version %}
 *          {%= homepage %}
 *
 * Generated by grunt-static-webapp
 * https://github.com/JoshuaJones/grunt-static-webapp
 *
 * https://gruntjs.com/
 *
 */
'use strict';

module.exports = function (grunt) {
  // load all deps
  require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);

  // Configurable paths
  var projectConfig = {
    dev: 'app',
    dist: 'dist'
  };

  grunt.initConfig({
    project: projectConfig,
    pkg: grunt.file.readJSON('package.json'),
    banner: ['/*\n',
              '  <%= pkg.name %> - <%= pkg.version %>\n',
              '  <%= grunt.template.today("yyyy-mm-dd") %>\n',
            '*/\n'].join(''),{% if (compass) { %}
    // Compass
    watch: {
      compass: {
        files: ['<%= project.dev %>/css/scss/{,*/}*.scss'],
        tasks: ['compass:dev']
      }
    },
    compass: {
      dev: {
        options: {
          basePath: '<%= project.dev %>',
          config: '<%= project.dev %>/config.rb',
          specify: '<%= project.dev %>/css/scss/main.scss'
        }
      }
    },{% } %}{% if (compress) { %}
    // Compress
    compress: {
      dist: {
        options: {
          archive: '<%= pkg.name %>-v<%= pkg.version %>-<%= grunt.template.today("yyyy-mm-dd") %>.zip'
        },
        expand: true,
        cwd: '<%= project.dist %>',
        src: ['**/*'],
        dest: '<%= pkg.name %>-v<%= pkg.version %>'
      }
    },{% } %}
    // JSHint
    jshint: {
      options: {
        jshintrc: '.jshintrc'
      },
      all: [
        'Gruntfile.js',
        '<%= project.dev %>/js/{,*/}*.js',
        '!<%= project.dev %>/js/vendor/*'
      ]
    },
    // Clean
    clean: {
      dist: {
        files: [{
          dot: true,
          src: [
            '<%= project.dist %>',
            '!<%= project.dist %>/.git*'
          ]
        }]
      }
    },{% if (usemin) { %}
    requirejs: {
      dist: {
        options: {
          baseUrl: projectConfig.dev + '/js',
          optimize: 'none',
          preserveLicenseComments: false,
          useStrict: true,
          wrap: true
        }
      }
    },
    // usemin Setup
    useminPrepare: {
      options: {
        dest: '<%= project.dist %>'
      },
      html: '<%= project.dev %>/index.html'
    },
    usemin: {
      options: {
        dirs: ['<%= project.dist %>']
      },
      html: ['<%= project.dist %>/{,*/}*.html'],
      css: ['<%= project.dist %>/css/{,*/}*.css']
    },{% } %}
    // Image Min
    imagemin: {
      dist: {
        files: [{
          expand: true,
          cwd: '<%= project.dev %>/images',
          src: '{,*/}*.{png,jpg,jpeg}',
          dest: '<%= project.dist %>/images'
        }]
      }
    },
    svgmin: {
      dist: {
        files: [{
          expand: true,
          cwd: '<%= project.dev %>/images',
          src: '{,*/}*.svg',
          dest: '<%= project.dist %>/images'
        }]
      }
    },{% if (!usemin) { %}
    // cssmin
    cssmin: {
      dist: {
        files: {
          '<%= project.dist %>/css/main.css': ['<%= project.dev %>/css/main.css']
        }
      }
    },
    // uglify js
    uglify: {
      dist: {
        files: {
          '<%= project.dist %>/js/vendor/modernizr.js': [ '<%= project.dev %>/bower_components/modernizr/modernizr.js' ],
          '<%= project.dist %>/js/vendor/jquery.js': [ '<%= project.dev %>/bower_components/jquery/jquery.js' ],
          '<%= project.dist %>/js/plugins.js': ['<%= project.dev %>/js/plugins.js'],
          '<%= project.dist %>/js/main.js': ['<%= project.dev %>/js/main.js']
        }
      }
    },{% } %}
    // HTML Min
    htmlmin: {
      dist: {
        files: [{
          expand: true,
          cwd: '<%= project.dev %>',
          src: '*.html',
          dest: '<%= project.dist %>'
        }]
      }
    },
    // Concurrently Run Tasks
    concurrent: {
      dist: [
        'compass',
        'imagemin',
        'svgmin',
        'htmlmin'
      ]
    },
    // Copy
    copy: {
      dist: {
        files: [{
          expand: true,
          cwd: '<%= project.dev %>',
          dest: '<%= project.dist %>',
          src: [
            '*.{ico,png,txt}',
            '.htaccess',
            'images/{,*/}*.{webp,gif}',
            'css/fonts/*'
          ]
        }]
      }
    }
  });

  grunt.registerTask('build', [
    'clean:dist',{% if (usemin) { %}
    'useminPrepare',{% } %}
    'concurrent:dist',{% if (usemin) { %}
    'concat',{% } %}
    'uglify',
    'cssmin',{% if (usemin) { %}
    'usemin',{% } %}
    'copy'
  ]);
  grunt.registerTask('archive', ['build', 'compress:dist']);
  grunt.registerTask('default', ['jshint', 'build']);

};
